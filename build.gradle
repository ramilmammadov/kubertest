import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage;
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage;

plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'com.bmuschko.docker-remote-api' version '6.1.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web'
}

task copyDockerfiles(type: Copy, dependsOn: assemble) {
    from 'src/docker'
    from "${project.buildDir}/libs"
    into { "${project.buildDir}/docker" }
    include "*"
    exclude "**/*.yml"
}
task dockerBuild(type: DockerBuildImage, dependsOn: copyDockerfiles) {
    inputDir.set(file("${project.buildDir}/docker"))
    images.add("gcr.io/winter-monolith-281508/java-k8s-gradle-gcloud-helm:2.0")

}
task dockerPush(type: DockerPushImage, dependsOn: dockerBuild) {
    images.add("gcr.io/winter-monolith-281508/java-k8s-gradle-gcloud-helm:2.0")
}

